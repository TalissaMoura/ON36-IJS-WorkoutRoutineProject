secrets:
  pg_password:
    file: ./.secrets/pg_password.txt
  pg_username:
    file: ./.secrets/pg_username.txt
  pg_database:
    file: ./.secrets/pg_database.txt
  pg_host:
    file: ./.secrets/pg_host.txt
  gemini_api_key:
    file: ./.secrets/gemini_api_key.txt
  weather_api_key:
    file: ./.secrets/weather_api_key.txt

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: /run/secrets/pg_username
      POSTGRES_PASSWORD: /run/secrets/pg_password
      POSTGRES_DB: /run/secrets/pg_database
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - pg_password
      - pg_username
      - pg_database
    restart: always

  nestjs-app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: /run/secrets/pg_username
      DATABASE_PASSWORD: /run/secrets/pg_password
      DATABASE_NAME: /run/secrets/pg_database
      TYPEORM_SYNCHRONIZE: false
    secrets:
      - pg_password
      - pg_username
      - pg_database
      - gemini_api_key
      - weather_api_key
    depends_on:
      - postgres

  nestjs-app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: /run/secrets/pg_username
      DATABASE_PASSWORD: /run/secrets/pg_password
      DATABASE_NAME: /run/secrets/pg_database
      TYPEORM_SYNCHRONIZE: false
    secrets:
      - pg_password
      - pg_username
      - pg_database
      - gemini_api_key
      - weather_api_key
    depends_on:
      - postgres

volumes:
  pgdata: