services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  nestjs-app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      TYPEORM_SYNCHRONIZE: true
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    depends_on:
      - postgres

  nestjs-app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      TYPEORM_SYNCHRONIZE: false
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
    depends_on:
      - postgres

volumes:
  pgdata: